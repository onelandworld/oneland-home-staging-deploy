"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[9687],{97596:function(t,r,e){e.d(r,{S:function(){return i}});var a=e(17249),n=e(18998);class i{get chainId(){return this._chainId}constructor(t,r,e){(0,a._)(this,"contractWrapper",void 0),(0,a._)(this,"storage",void 0),(0,a._)(this,"erc721",void 0),(0,a._)(this,"_chainId",void 0),(0,a._)(this,"transfer",(0,n.cT)(async(t,r)=>this.erc721.transfer.prepare(t,r))),(0,a._)(this,"setApprovalForAll",(0,n.cT)(async(t,r)=>this.erc721.setApprovalForAll.prepare(t,r))),(0,a._)(this,"setApprovalForToken",(0,n.cT)(async(t,r)=>n.aU.fromContractWrapper({contractWrapper:this.contractWrapper,method:"approve",args:[await (0,n.cU)(t),r]}))),this.contractWrapper=t,this.storage=r,this.erc721=new n.au(this.contractWrapper,this.storage,e),this._chainId=e}onNetworkUpdated(t){this.contractWrapper.updateSignerOrProvider(t)}getAddress(){return this.contractWrapper.readContract.address}async getAll(t){return this.erc721.getAll(t)}async getOwned(t){return t&&(t=await (0,n.cU)(t)),this.erc721.getOwned(t)}async getOwnedTokenIds(t){return t&&(t=await (0,n.cU)(t)),this.erc721.getOwnedTokenIds(t)}async totalSupply(){return this.erc721.totalCirculatingSupply()}async get(t){return this.erc721.get(t)}async ownerOf(t){return this.erc721.ownerOf(t)}async balanceOf(t){return this.erc721.balanceOf(t)}async balance(){return this.erc721.balance()}async isApproved(t,r){return this.erc721.isApproved(t,r)}}},59687:function(t,r,e){e.r(r),e.d(r,{NFTDrop:function(){return p}});var a=e(17249),n=e(18998),i=e(97596),s=e(91347),c=e(2593),o=e(9279);e(41323),e(62822),e(71770),e(96200),e(54098),e(2162),e(64063);class p extends i.S{constructor(t,r,e){var i;let c=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},o=arguments.length>4?arguments[4]:void 0,h=arguments.length>5?arguments[5]:void 0,l=arguments.length>6&&void 0!==arguments[6]?arguments[6]:new n.c$(t,r,o,c);super(l,e,h),i=this,(0,a._)(this,"abi",void 0),(0,a._)(this,"encoder",void 0),(0,a._)(this,"estimator",void 0),(0,a._)(this,"metadata",void 0),(0,a._)(this,"app",void 0),(0,a._)(this,"sales",void 0),(0,a._)(this,"platformFees",void 0),(0,a._)(this,"events",void 0),(0,a._)(this,"roles",void 0),(0,a._)(this,"interceptor",void 0),(0,a._)(this,"royalties",void 0),(0,a._)(this,"claimConditions",void 0),(0,a._)(this,"revealer",void 0),(0,a._)(this,"checkout",void 0),(0,a._)(this,"owner",void 0),(0,a._)(this,"createBatch",(0,n.cT)(async(t,r)=>this.erc721.lazyMint.prepare(t,r))),(0,a._)(this,"claimTo",(0,n.cT)(async function(t,r){let e=!(arguments.length>2)||void 0===arguments[2]||arguments[2];return i.erc721.claimTo.prepare(t,r,{checkERC20Allowance:e})})),(0,a._)(this,"claim",(0,n.cT)(async function(t){let r=!(arguments.length>1)||void 0===arguments[1]||arguments[1];return i.claimTo.prepare(await i.contractWrapper.getSignerAddress(),t,r)})),(0,a._)(this,"burn",(0,n.cT)(async t=>this.erc721.burn.prepare(t))),(0,a._)(this,"transfer",(0,n.cT)(async(t,r)=>this.erc721.transfer.prepare(t,r))),(0,a._)(this,"setApprovalForAll",(0,n.cT)(async(t,r)=>this.erc721.setApprovalForAll.prepare(t,r))),(0,a._)(this,"setApprovalForToken",(0,n.cT)(async(t,r)=>n.aU.fromContractWrapper({contractWrapper:this.contractWrapper,method:"approve",args:[t,r]}))),this.abi=n.e.parse(o||[]),this.metadata=new n.ai(this.contractWrapper,n.d9,this.storage),this.app=new n.aW(this.contractWrapper,this.metadata,this.storage),this.roles=new n.aj(this.contractWrapper,p.contractRoles),this.royalties=new n.ak(this.contractWrapper,this.metadata),this.sales=new n.al(this.contractWrapper),this.claimConditions=new n.an(this.contractWrapper,this.metadata,this.storage),this.encoder=new n.ah(this.contractWrapper),this.estimator=new n.aO(this.contractWrapper),this.events=new n.aP(this.contractWrapper),this.platformFees=new n.aR(this.contractWrapper),this.revealer=new n.am(this.contractWrapper,this.storage,n.da.name,()=>this.erc721.nextTokenIdToMint()),this.interceptor=new n.aQ(this.contractWrapper),this.owner=new n.aT(this.contractWrapper),this.checkout=new s.a(this.contractWrapper)}onNetworkUpdated(t){this.contractWrapper.updateSignerOrProvider(t)}getAddress(){return this.contractWrapper.readContract.address}async totalSupply(){let t=await this.totalClaimedSupply(),r=await this.totalUnclaimedSupply();return t.add(r)}async getAllClaimed(t){let r=c.O$.from(t?.start||0).toNumber(),e=c.O$.from(t?.count||a.c).toNumber(),n=Math.min((await this.contractWrapper.readContract.nextTokenIdToClaim()).toNumber(),r+e);return await Promise.all(Array.from(Array(n).keys()).map(t=>this.get(t.toString())))}async getAllUnclaimed(t){let r=c.O$.from(t?.start||0).toNumber(),e=c.O$.from(t?.count||a.c).toNumber(),n=c.O$.from(Math.max((await this.contractWrapper.readContract.nextTokenIdToClaim()).toNumber(),r)),i=c.O$.from(Math.min((await this.contractWrapper.readContract.nextTokenIdToMint()).toNumber(),n.toNumber()+e));return await Promise.all(Array.from(Array(i.sub(n).toNumber()).keys()).map(t=>this.erc721.getTokenMetadata(n.add(t).toString())))}async totalClaimedSupply(){return this.erc721.totalClaimedSupply()}async totalUnclaimedSupply(){return this.erc721.totalUnclaimedSupply()}async isTransferRestricted(){let t=await this.contractWrapper.readContract.hasRole((0,n.bq)("transfer"),o.d);return!t}async getClaimTransaction(t,r){let e=!(arguments.length>2)||void 0===arguments[2]||arguments[2];return this.erc721.getClaimTransaction(t,r,{checkERC20Allowance:e})}async get(t){return this.erc721.get(t)}async ownerOf(t){return this.erc721.ownerOf(t)}async balanceOf(t){return this.erc721.balanceOf(t)}async balance(){return this.erc721.balance()}async isApproved(t,r){return this.erc721.isApproved(t,r)}async prepare(t,r,e){return n.aU.fromContractWrapper({contractWrapper:this.contractWrapper,method:t,args:r,overrides:e})}async call(t,r,e){return this.contractWrapper.call(t,r,e)}}(0,a._)(p,"contractRoles",["admin","minter","transfer"])},91347:function(t,r,e){e.d(r,{a:function(){return l}});var a=e(17249),n=e(2177),i=e(18998);let s="https://paper.xyz/api/2022-08-12/platform/thirdweb",c={[i.u.Mainnet]:"Ethereum",[i.u.Goerli]:"Goerli",[i.u.Polygon]:"Polygon",[i.u.Mumbai]:"Mumbai",[i.u.Avalanche]:"Avalanche"};async function o(t,r){let e=((0,n.Z)(r in c,`chainId not supported by paper: ${r}`),c[r]),a=await fetch(`${s}/register-contract?contractAddress=${t}&chain=${e}`),i=await a.json();return(0,n.Z)(i.result.id,"Contract is not registered with paper"),i.result.id}let p={expiresInMinutes:15,feeBearer:"BUYER",sendEmailOnSuccess:!0,redirectAfterPayment:!1};async function h(t,r){let e=await fetch(`${s}/checkout-link-intent`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({contractId:t,...p,...r,metadata:{...r.metadata,via_platform:"thirdweb"},hideNativeMint:!0,hidePaperWallet:!!r.walletAddress,hideExternalWallet:!0,hidePayWithCrypto:!0,usePaperKey:!1})}),a=await e.json();return(0,n.Z)(a.checkoutLinkIntentUrl,"Failed to create checkout link intent"),a.checkoutLinkIntentUrl}class l{constructor(t){(0,a._)(this,"contractWrapper",void 0),this.contractWrapper=t}async getCheckoutId(){return o(this.contractWrapper.readContract.address,await this.contractWrapper.getChainID())}async isEnabled(){try{return!!await this.getCheckoutId()}catch(t){return!1}}async createLinkIntent(t){return await h(await this.getCheckoutId(),t)}}}}]);